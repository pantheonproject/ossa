// Code generated by protoc-gen-go. DO NOT EDIT.
// source: audit.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("audit.proto", fileDescriptor_5594839dd8e38a1b) }

var fileDescriptor_5594839dd8e38a1b = []byte{
	// 62 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2c, 0x4d, 0xc9,
	0x2c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x46, 0x82, 0x5c, 0xfc, 0x8e,
	0x20, 0x51, 0xc7, 0xf4, 0xf4, 0xa2, 0xd4, 0xf4, 0xc4, 0x92, 0xfc, 0xa2, 0x24, 0x36, 0xb0, 0x8c,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x06, 0x97, 0x35, 0x2d, 0x2f, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuditAggregatorClient is the client API for AuditAggregator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuditAggregatorClient interface {
}

type auditAggregatorClient struct {
	cc *grpc.ClientConn
}

func NewAuditAggregatorClient(cc *grpc.ClientConn) AuditAggregatorClient {
	return &auditAggregatorClient{cc}
}

// AuditAggregatorServer is the server API for AuditAggregator service.
type AuditAggregatorServer interface {
}

// UnimplementedAuditAggregatorServer can be embedded to have forward compatible implementations.
type UnimplementedAuditAggregatorServer struct {
}

func RegisterAuditAggregatorServer(s *grpc.Server, srv AuditAggregatorServer) {
	s.RegisterService(&_AuditAggregator_serviceDesc, srv)
}

var _AuditAggregator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AuditAggregator",
	HandlerType: (*AuditAggregatorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "audit.proto",
}
